// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// c_nnmf
Rcpp::List c_nnmf(const arma::mat& A, const unsigned int k, const unsigned int max_iter, const double rel_tol, const int n_threads, const int verbose, const unsigned int inner_max_iter, const double inner_rel_tol, const int trace);
RcppExport SEXP _scNMF_c_nnmf(SEXP ASEXP, SEXP kSEXP, SEXP max_iterSEXP, SEXP rel_tolSEXP, SEXP n_threadsSEXP, SEXP verboseSEXP, SEXP inner_max_iterSEXP, SEXP inner_rel_tolSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type rel_tol(rel_tolSEXP);
    Rcpp::traits::input_parameter< const int >::type n_threads(n_threadsSEXP);
    Rcpp::traits::input_parameter< const int >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type inner_max_iter(inner_max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type inner_rel_tol(inner_rel_tolSEXP);
    Rcpp::traits::input_parameter< const int >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(c_nnmf(A, k, max_iter, rel_tol, n_threads, verbose, inner_max_iter, inner_rel_tol, trace));
    return rcpp_result_gen;
END_RCPP
}
// c_project
Rcpp::List c_project(const arma::mat& A, const arma::mat& W, const int n_threads, const unsigned int inner_max_iter, const double inner_rel_tol);
RcppExport SEXP _scNMF_c_project(SEXP ASEXP, SEXP WSEXP, SEXP n_threadsSEXP, SEXP inner_max_iterSEXP, SEXP inner_rel_tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const int >::type n_threads(n_threadsSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type inner_max_iter(inner_max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type inner_rel_tol(inner_rel_tolSEXP);
    rcpp_result_gen = Rcpp::wrap(c_project(A, W, n_threads, inner_max_iter, inner_rel_tol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_scNMF_c_nnmf", (DL_FUNC) &_scNMF_c_nnmf, 9},
    {"_scNMF_c_project", (DL_FUNC) &_scNMF_c_project, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_scNMF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
